{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Projetos/sd-05-recipes-app-5/src/components/SearchBar.jsx\";\nimport React from 'react';\nimport { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodByLetter, getFoodByIngredients } from '../Services/foodAPI';\nimport { getDrinksByName, getDrinksByLetter, getDrinksByIngredients } from '../Services/drinkAPI';\n\nconst GetDrinkApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getDrinksByName(input).then(data => {\n        if (!data.drinks) {\n          return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n        }\n\n        return save(data.drinks);\n      });\n\n    case 'ing':\n      return getDrinksByIngredients(input).then(data => save(data.drinks));\n\n    case 'letter':\n      return getDrinksByLetter(input).then(data => save(data.drinks));\n\n    default:\n      return target;\n  }\n};\n\nconst GetFoodApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getFoodByName(input).then(data => {\n        if (!data.meals) {\n          return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n        }\n\n        return save(data.meals);\n      });\n\n    case 'ing':\n      return getFoodByIngredients(input).then(data => save(data.meals));\n\n    case 'letter':\n      return getFoodByLetter(input).then(data => save(data.meals));\n\n    default:\n      return target;\n  }\n};\n\nconst searchBtn = (receitas, target, input, setDrink, setFood) => /*#__PURE__*/React.createElement(\"button\", {\n  \"data-testid\": \"exec-search-btn\",\n  className: \"search-btn\",\n  type: \"button\",\n  onClick: () => {\n    if (target === 'letter' && input.length > 1) {\n      return alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n\n    return receitas === 'Comidas' ? GetFoodApi(target, input, setFood) : GetDrinkApi(target, input, setDrink);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, \"Buscar\");\n\nconst SearchBar = () => {\n  const [target, setTarget] = useState('name');\n  const [input, setInput] = useState('');\n  const {\n    setFood,\n    setDrink,\n    receitas,\n    setReceitas\n  } = useContext(Context);\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  useEffect(() => {\n    if (pathname === '/bebidas') {\n      setReceitas('Bebidas');\n    } else if (pathname === '/comidas') {\n      setReceitas('Comidas');\n    }\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"search-input\",\n    onChange: e => setInput(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: () => setTarget('ing'),\n    type: \"radio\",\n    id: \"ing\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Ingrediente\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    onChange: () => setTarget('name'),\n    type: \"radio\",\n    id: \"nome\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: () => setTarget('letter'),\n    type: \"radio\",\n    id: \"letra\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Primeira Letra\")), searchBtn(receitas, target, input, setDrink, setFood));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/rafael/Projetos/sd-05-recipes-app-5/src/components/SearchBar.jsx"],"names":["React","useContext","useState","useEffect","useHistory","Context","getFoodByName","getFoodByLetter","getFoodByIngredients","getDrinksByName","getDrinksByLetter","getDrinksByIngredients","GetDrinkApi","target","input","save","then","data","drinks","alert","GetFoodApi","meals","searchBtn","receitas","setDrink","setFood","length","SearchBar","setTarget","setInput","setReceitas","location","pathname","e","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodByLetter, getFoodByIngredients } from '../Services/foodAPI';\nimport { getDrinksByName, getDrinksByLetter, getDrinksByIngredients } from '../Services/drinkAPI';\n\nconst GetDrinkApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getDrinksByName(input).then((data) => {\n        if (!data.drinks) {\n          return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n        }\n        return save(data.drinks);\n      });\n    case 'ing':\n      return getDrinksByIngredients(input).then((data) => save(data.drinks));\n\n    case 'letter':\n      return getDrinksByLetter(input).then((data) => save(data.drinks));\n    default: return target;\n  }\n};\n\nconst GetFoodApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getFoodByName(input).then((data) => {\n        if (!data.meals) {\n          return alert('Sinto muito, nÃ£o encontramos nenhuma receita para esses filtros.');\n        }\n        return save(data.meals);\n      });\n    case 'ing':\n      return getFoodByIngredients(input).then((data) => save(data.meals));\n    case 'letter':\n      return getFoodByLetter(input).then((data) => save(data.meals));\n    default: return target;\n  }\n};\nconst searchBtn = (receitas, target, input, setDrink, setFood) => (\n  <button\n    data-testid=\"exec-search-btn\"\n    className=\"search-btn\"\n    type=\"button\"\n    onClick={() => {\n      if (target === 'letter' && input.length > 1) {\n        return alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n      return receitas === 'Comidas'\n        ? GetFoodApi(target, input, setFood)\n        : GetDrinkApi(target, input, setDrink);\n    }}\n  >\n    Buscar\n  </button>\n);\n\nconst SearchBar = () => {\n  const [target, setTarget] = useState('name');\n  const [input, setInput] = useState('');\n  const { setFood, setDrink, receitas, setReceitas } = useContext(Context);\n  const {\n    location: { pathname },\n  } = useHistory();\n  useEffect(() => {\n    if (pathname === '/bebidas') {\n      setReceitas('Bebidas');\n    } else if (pathname === '/comidas') {\n      setReceitas('Comidas');\n    }\n  }, [pathname]);\n  return (\n    <div>\n      <input data-testid=\"search-input\" onChange={(e) => setInput(e.target.value)} type=\"text\" />\n      <div>\n        <input\n          data-testid=\"ingredient-search-radio\"\n          onChange={() => setTarget('ing')}\n          type=\"radio\"\n          id=\"ing\"\n          name=\"target\"\n        />\n        <label htmlFor=\"ing\">Ingrediente</label>\n        <input\n          data-testid=\"name-search-radio\"\n          onChange={() => setTarget('name')}\n          type=\"radio\"\n          id=\"nome\"\n          name=\"target\"\n        />\n        <label htmlFor=\"nome\">Nome</label>\n        <input\n          data-testid=\"first-letter-search-radio\"\n          onChange={() => setTarget('letter')}\n          type=\"radio\"\n          id=\"letra\"\n          name=\"target\"\n        />\n        <label htmlFor=\"letra\">Primeira Letra</label>\n      </div>\n      {searchBtn(receitas, target, input, setDrink, setFood)}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}