{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Projetos/sd-05-recipes-app-5/src/components/CategoriesF.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport Context from '../context/Context';\nimport { getFoodCategories, getFCatFiltered, getFoodByName, getFood } from '../Services/foodAPI';\nlet checkFilter = '';\n\nfunction CategoriesF() {\n  const {\n    setCategories,\n    categories,\n    setFood\n  } = useContext(Context);\n  useEffect(() => {\n    getFoodCategories().then(data => setCategories(data.meals));\n  }, []);\n\n  function onC(cat) {\n    if (cat === checkFilter) {\n      getFoodByName('').then(data => setFood(data.meals));\n    } else {\n      getFCatFiltered(cat).then(data => setFood(data.meals));\n      checkFilter = cat;\n    }\n  }\n\n  function onCAll() {\n    getFood().then(data => setFood(data.meals));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onCAll(),\n    value: \"All\",\n    \"data-testid\": \"All-category-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"All\"), categories.slice(0, 5).map(element => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": `${element.strCategory}-category-filter`,\n    onClick: e => onC(e.target.value),\n    value: element.strCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, element.strCategory))));\n}\n\nexport default CategoriesF;","map":{"version":3,"sources":["/home/rafael/Projetos/sd-05-recipes-app-5/src/components/CategoriesF.jsx"],"names":["React","useContext","useEffect","Context","getFoodCategories","getFCatFiltered","getFoodByName","getFood","checkFilter","CategoriesF","setCategories","categories","setFood","then","data","meals","onC","cat","onCAll","slice","map","element","strCategory","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,aAA7C,EAA4DC,OAA5D,QAA2E,qBAA3E;AAEA,IAAIC,WAAW,GAAG,EAAlB;;AACA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAAyCX,UAAU,CAACE,OAAD,CAAzD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,iBAAiB,GAAGS,IAApB,CAA0BC,IAAD,IAAUJ,aAAa,CAACI,IAAI,CAACC,KAAN,CAAhD;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,GAAT,CAAaC,GAAb,EAAkB;AAChB,QAAIA,GAAG,KAAKT,WAAZ,EAAyB;AACvBF,MAAAA,aAAa,CAAC,EAAD,CAAb,CAAkBO,IAAlB,CAAwBC,IAAD,IAAUF,OAAO,CAACE,IAAI,CAACC,KAAN,CAAxC;AACD,KAFD,MAEO;AACLV,MAAAA,eAAe,CAACY,GAAD,CAAf,CAAqBJ,IAArB,CAA2BC,IAAD,IAAUF,OAAO,CAACE,IAAI,CAACC,KAAN,CAA3C;AACAP,MAAAA,WAAW,GAAGS,GAAd;AACD;AACF;;AACD,WAASC,MAAT,GAAkB;AAChBX,IAAAA,OAAO,GAAGM,IAAV,CAAgBC,IAAD,IAAUF,OAAO,CAACE,IAAI,CAACC,KAAN,CAAhC;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMG,MAAM,EAA7B;AAAiC,IAAA,KAAK,EAAC,KAAvC;AAA6C,mBAAY,qBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAIGP,UAAU,CAACQ,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,GAAvB,CAA4BC,OAAD,iBAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAc,GAAEA,OAAO,CAACC,WAAY,kBADtC;AAEE,IAAA,OAAO,EAAGC,CAAD,IAAOP,GAAG,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAFrB;AAGE,IAAA,KAAK,EAAEJ,OAAO,CAACC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,OAAO,CAACC,WALX,CADF,CADD,CAJH,CADF;AAkBD;;AACD,eAAeb,WAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\n\nimport Context from '../context/Context';\nimport { getFoodCategories, getFCatFiltered, getFoodByName, getFood } from '../Services/foodAPI';\n\nlet checkFilter = '';\nfunction CategoriesF() {\n  const { setCategories, categories, setFood } = useContext(Context);\n\n  useEffect(() => {\n    getFoodCategories().then((data) => setCategories(data.meals));\n  }, []);\n\n  function onC(cat) {\n    if (cat === checkFilter) {\n      getFoodByName('').then((data) => setFood(data.meals));\n    } else {\n      getFCatFiltered(cat).then((data) => setFood(data.meals));\n      checkFilter = cat;\n    }\n  }\n  function onCAll() {\n    getFood().then((data) => setFood(data.meals));\n  }\n  return (\n    <div>\n      <button onClick={() => onCAll()} value=\"All\" data-testid=\"All-category-filter\">\n        All\n      </button>\n      {categories.slice(0, 5).map((element) => (\n        <div>\n          <button\n            data-testid={`${element.strCategory}-category-filter`}\n            onClick={(e) => onC(e.target.value)}\n            value={element.strCategory}\n          >\n            {element.strCategory}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default CategoriesF;\n"]},"metadata":{},"sourceType":"module"}