{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Projetos/sd-05-recipes-app-5/src/components/SearchBar.jsx\";\nimport React from 'react';\nimport { useContext, useState } from 'react';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodByLetter, getFoodByIngredients } from '../Services/foodAPI';\nimport { getDrinksByName, getDrinksByLetter, getDrinksByIngredients } from '../Services/drinkAPI';\n\nconst GetDrinkApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getDrinksByName(input).then(data => save(data.drink));\n\n    case 'ing':\n      return getDrinksByIngredients(input).then(data => save(data.drink));\n\n    case 'letter':\n      return getDrinksByLetter(input).then(data => save(data.drink));\n\n    default:\n  }\n};\n\nconst GetFoodApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getFoodByName(input).then(data => save(data.food));\n\n    case 'ing':\n      return getFoodByIngredients(input).then(data => save(data.food));\n\n    case 'letter':\n      return getFoodByLetter(input).then(data => save(data.food));\n\n    default:\n  }\n};\n\nconst searchBtn = (receitas, target, input, setDrink, setFood) => /*#__PURE__*/React.createElement(\"button\", {\n  \"data-testid\": \"exec-search-btn\",\n  className: \"search-btn\",\n  type: \"button\",\n  onClick: () => {\n    if (target === 'letter' && input.length > 1) {\n      return alert('Sua busca deve conter somente 1 lettra');\n    }\n\n    return receitas === 'Comidas' ? GetFoodApi(target, input, setFood) : GetDrinkApi(target, input, setDrink);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, \"Buscar\");\n\nconst SearchBar = ({\n  recipeType\n}) => {\n  const [target, setTarget] = useState('name');\n  const [input, setInput] = useState('');\n  const {\n    setFood,\n    setDrink\n  } = useContext(Context);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"search-input\",\n    onChange: e => setInput(e.target.value),\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"ingredient-search-radio\",\n    onChange: () => setTarget('ing'),\n    type: \"radio\",\n    id: \"ing\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"name-search-radio\",\n    onChange: () => setTarget('name'),\n    type: \"radio\",\n    id: \"nome\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"first-letter-search-radio\",\n    onChange: () => setTarget('letter'),\n    type: \"radio\",\n    id: \"letra\",\n    name: \"target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Primeira Letra\")), searchBtn(recipeType, target, input, setDrink, setFood));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/rafael/Projetos/sd-05-recipes-app-5/src/components/SearchBar.jsx"],"names":["React","useContext","useState","Context","getFoodByName","getFoodByLetter","getFoodByIngredients","getDrinksByName","getDrinksByLetter","getDrinksByIngredients","GetDrinkApi","target","input","save","then","data","drink","GetFoodApi","food","searchBtn","receitas","setDrink","setFood","length","alert","SearchBar","recipeType","setTarget","setInput","e","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useContext, useState } from 'react';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodByLetter, getFoodByIngredients } from '../Services/foodAPI';\nimport { getDrinksByName, getDrinksByLetter, getDrinksByIngredients } from '../Services/drinkAPI';\n\nconst GetDrinkApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getDrinksByName(input).then((data) => save(data.drink));\n    case 'ing':\n      return getDrinksByIngredients(input).then((data) => save(data.drink));\n    case 'letter':\n      return getDrinksByLetter(input).then((data) => save(data.drink));\n    default:\n  }\n};\n\nconst GetFoodApi = (target, input, save) => {\n  switch (target) {\n    case 'name':\n      return getFoodByName(input).then((data) => save(data.food));\n    case 'ing':\n      return getFoodByIngredients(input).then((data) => save(data.food));\n    case 'letter':\n      return getFoodByLetter(input).then((data) => save(data.food));\n    default:\n  }\n};\n\nconst searchBtn = (receitas, target, input, setDrink, setFood) => (\n  <button\n    data-testid=\"exec-search-btn\"\n    className=\"search-btn\"\n    type=\"button\"\n    onClick={() => {\n      if (target === 'letter' && input.length > 1) {\n        return alert('Sua busca deve conter somente 1 lettra');\n      }\n      return receitas === 'Comidas'\n        ? GetFoodApi(target, input, setFood)\n        : GetDrinkApi(target, input, setDrink);\n    }}\n  >\n    Buscar\n  </button>\n);\n\nconst SearchBar = ({ recipeType }) => {\n  const [target, setTarget] = useState('name');\n  const [input, setInput] = useState('');\n  const { setFood, setDrink } = useContext(Context);\n  return (\n    <div>\n      <input data-testid=\"search-input\" onChange={(e) => setInput(e.target.value)} type=\"text\" />\n      <div>\n        <input\n          data-testid=\"ingredient-search-radio\"\n          onChange={() => setTarget('ing')}\n          type=\"radio\"\n          id=\"ing\"\n          name=\"target\"\n        />\n        <label htmlFor=\"ing\">Ingredientes</label>\n        <input\n          data-testid=\"name-search-radio\"\n          onChange={() => setTarget('name')}\n          type=\"radio\"\n          id=\"nome\"\n          name=\"target\"\n        />\n        <label htmlFor=\"nome\">Nome</label>\n        <input\n          data-testid=\"first-letter-search-radio\"\n          onChange={() => setTarget('letter')}\n          type=\"radio\"\n          id=\"letra\"\n          name=\"target\"\n        />\n        <label htmlFor=\"letra\">Primeira Letra</label>\n      </div>\n      {searchBtn(recipeType, target, input, setDrink, setFood)}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}