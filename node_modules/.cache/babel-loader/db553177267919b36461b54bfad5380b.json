{"ast":null,"code":"const foodUrl = 'https://www.themealdb.com/api/json/v1/1/';\nexport default function tokenAPI() {\n  const fetchAPI = fetch(foodUrl).then(resolve => resolve.json());\n  return fetchAPI;\n}\nexport const getFoodByName = name => {\n  const URL = `${foodUrl}search.php?s=${name}`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getFoodByIngredients = ingredient => {\n  const URL = `${foodUrl}filter.php?i=${ingredient}`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getFoodByLetter = letter => {\n  const URL = `${foodUrl}search.php?f=${letter}`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getFoodCategories = () => {\n  const URL = `${foodUrl}list.php?c=list`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getFoodIngredients = () => {\n  const URL = `${foodUrl}list.php?i=list`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};\nexport const getRandomFood = () => {\n  const URL = `${foodUrl}random.php`;\n  return fetch(URL).then(response => response.json().then(json => response.ok ? Promise.resolve(json) : Promise.reject(json)));\n};","map":{"version":3,"sources":["/home/rafael/Projetos/sd-05-recipes-app-5/src/Services/foodAPI.js"],"names":["foodUrl","tokenAPI","fetchAPI","fetch","then","resolve","json","getFoodByName","name","URL","response","ok","Promise","reject","getFoodByIngredients","ingredient","getFoodByLetter","letter","getFoodCategories","getFoodIngredients","getRandomFood"],"mappings":"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","sourcesContent":["const foodUrl = 'https://www.themealdb.com/api/json/v1/1/';\n\nexport default function tokenAPI() {\n  const fetchAPI = fetch(foodUrl).then((resolve) => resolve.json());\n  return fetchAPI;\n}\n\nexport const getFoodByName = (name) => {\n  const URL = `${foodUrl}search.php?s=${name}`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n\nexport const getFoodByIngredients = (ingredient) => {\n  const URL = `${foodUrl}filter.php?i=${ingredient}`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n\nexport const getFoodByLetter = (letter) => {\n  const URL = `${foodUrl}search.php?f=${letter}`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n\nexport const getFoodCategories = () => {\n  const URL = `${foodUrl}list.php?c=list`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n\nexport const getFoodIngredients = () => {\n  const URL = `${foodUrl}list.php?i=list`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n\nexport const getRandomFood = () => {\n  const URL = `${foodUrl}random.php`;\n  return fetch(URL).then((response) =>\n    response.json().then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json))),\n  );\n};\n"]},"metadata":{},"sourceType":"module"}