{"ast":null,"code":"var _jsxFileName = \"/home/rafael/Projetos/sd-05-recipes-app-5/src/Pages/ExplorarArea.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodAreas, getFoodByArea } from '../Services/foodAPI';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst fulfillFoods = foods => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, foods.slice(0, 12).map((el, i) => /*#__PURE__*/React.createElement(Link, {\n  to: `/comidas/${el.idMeal}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  \"data-testid\": `${i}-recipe-card`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  \"data-testid\": `${i}-card-name`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, el.strMeal), /*#__PURE__*/React.createElement(\"img\", {\n  alt: el.strMeal,\n  \"data-testid\": `${i}-card-img`,\n  src: el.strMealThumb,\n  heigth: \"15%\",\n  width: \"15%\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }\n})))));\n\nfunction ExplorarArea() {\n  const [areas, setArea] = useState();\n  const [a2, setA2] = useState();\n  const {\n    food,\n    setFood\n  } = useContext(Context);\n\n  function hC(area) {\n    setA2(area);\n  }\n\n  const selectArea = sAreas => /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"explore-by-area-dropdown\",\n    onChange: e => hC(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    \"data-testid\": \"All-option\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"All\"), sAreas.map(el => /*#__PURE__*/React.createElement(\"option\", {\n    \"data-testid\": `${el.strArea}-option`,\n    value: el.strArea,\n    key: el.strArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, el.strArea)));\n\n  useEffect(() => {\n    getFoodAreas().then(data => setArea(data.meals));\n    getFoodByName('').then(data => setFood(data.meals));\n  }, []);\n  useEffect(() => {\n    getFoodByArea(a2).then(data => setFood(data.meals));\n  }, [a2]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Explorar Origem\"), areas ? selectArea(areas) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 36\n    }\n  }, \" oiiii \"), food ? fulfillFoods(food) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }\n  }, \" oi2 \"), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExplorarArea;","map":{"version":3,"sources":["/home/rafael/Projetos/sd-05-recipes-app-5/src/Pages/ExplorarArea.js"],"names":["React","useContext","useEffect","useState","Link","Context","getFoodByName","getFoodAreas","getFoodByArea","Footer","Header","fulfillFoods","foods","slice","map","el","i","idMeal","strMeal","strMealThumb","ExplorarArea","areas","setArea","a2","setA2","food","setFood","hC","area","selectArea","sAreas","e","target","value","strArea","then","data","meals"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Context from '../context/Context';\nimport { getFoodByName, getFoodAreas, getFoodByArea } from '../Services/foodAPI';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nconst fulfillFoods = (foods) => (\n  <div>\n    {foods.slice(0, 12).map((el, i) => (\n      <Link to={`/comidas/${el.idMeal}`}>\n        <div data-testid={`${i}-recipe-card`}>\n          <p data-testid={`${i}-card-name`}>{el.strMeal}</p>\n          <img alt={el.strMeal} data-testid={`${i}-card-img`} src={el.strMealThumb} heigth=\"15%\" width=\"15%\" />\n        </div>\n      </Link>\n    ))}\n  </div>\n);\n\nfunction ExplorarArea() {\n  const [areas, setArea] = useState();\n  const [a2, setA2] = useState();\n  const { food, setFood } = useContext(Context);\n\n  function hC(area) {\n    setA2(area);\n  }\n  const selectArea = (sAreas) => (\n    <select data-testid=\"explore-by-area-dropdown\" onChange={(e) => hC(e.target.value)}>\n      <option value=\"all\" data-testid=\"All-option\">\n        All\n      </option>\n      {sAreas.map((el) => (\n        <option data-testid={`${el.strArea}-option`} value={el.strArea} key={el.strArea}>\n          {el.strArea}\n        </option>\n      ))}\n    </select>\n  );\n  useEffect(() => {\n    getFoodAreas().then((data) => setArea(data.meals));\n    getFoodByName('').then((data) => setFood(data.meals));\n  }, []);\n  useEffect(() => {\n    getFoodByArea(a2).then((data) => setFood(data.meals));\n  }, [a2]);\n\n  return (\n    <div>\n      <Header>Explorar Origem</Header>\n      {areas ? selectArea(areas) : <div> oiiii </div>}\n      {food ? fulfillFoods(food) : <div> oi2 </div>}\n      <Footer />\n    </div>\n  );\n}\nexport default ExplorarArea;\n"]},"metadata":{},"sourceType":"module"}